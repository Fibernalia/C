1. openssl rsa -in robert.almar_pubkeyRSA_pseudo.pem -pubin -text -modulus > salida.txt 

2. Sagemath
   --------

Modulus = "1FAF51E2330E308009E74D3D923A6561396F6767C78530DF63E555DE7AE5CC4AA85CFB9B00392FB2C5698D83515407FD6CC385F3FBDAA15FC54B9FA9484E34E310C5B8CFE91B303F17CE8E1B433E0F94B28501F9008EB0CCFDD9D5762D27B21878B96515C513DB03BBB0F178170A70A77419ACC5AB02B1EB3D39B43AC386E3908CDCE5B8605227533323D6ECA017CD8B864E66F9D5B3EACAEAA722FA61F4D2446D5E4BF0592B15B261DD5D2FC689F3D3F11DF43C2A6E812519E38FF7943638B7B1FE695000EEDD5A623E6AD2039076A929B83B2D3D12F026C1A187F9521FD04A7560682B63555FF566910B2297D040B5B95AC53CC883171437F3A977265E801"
n = long(Modulus,16)
n

249990056123928668793203839833206604305624400332112304476511698181288485057416958982240125141894806540061858605631757559235924714118832651689377941842991620451117555242624338138732313087240072139672740315699126277501333392272511822159686537440789390786216182566757789640336967328315282365459674223596345608438332616999361069264805772086210540967757689263800041538917282689947988484655861596843208440164263394866551204567595709881606550326536992340455731524941779838383486890254196700386832238639095774514160043042783619855458904656726249990558935296646604748620830842439206120778200888328159988841480928727189022721L

factor(n)

13981907172955894103^16 * 322557773591707352349699032044643966351^8

p = long(13981907172955894103^16)
q = long(322557773591707352349699032044643966351^8)
p*q

249990056123928668793203839833206604305624400332112304476511698181288485057416958982240125141894806540061858605631757559235924714118832651689377941842991620451117555242624338138732313087240072139672740315699126277501333392272511822159686537440789390786216182566757789640336967328315282365459674223596345608438332616999361069264805772086210540967757689263800041538917282689947988484655861596843208440164263394866551204567595709881606550326536992340455731524941779838383486890254196700386832238639095774514160043042783619855458904656726249990558935296646604748620830842439206120778200888328159988841480928727189022721L

# n = p^r * q^s => fiDeN = (p^(r-1) * (p-1)) * (q^(s-1) * (q-1))

e = long(65537)
fiDeN = long( ( 13981907172955894103^15 * (13981907172955894103 - 1) ) * ( 322557773591707352349699032044643966351^7 * (322557773591707352349699032044643966351 - 1) ) )
fiDeN
d = long(inverse_mod(e,fiDeN))
d

249990056123928668775324300723730551005094439952609766855742413814679047489056426382140672108493503514842117628245051451143991844187522702686015770172777616844910153804532667302681255417986414811791431828907130312596052463624785569221079067132957002181582322770457210669339217557938269253682510420508396679153555571245156612573158501461058300959390570951692986902123061911266647773364340339668277273499930674666489289170749870572040085208367921779958570240947604207078933623272504411576133582319815778400226974332826300960578916129936304082527643985413837430556214157471631178126092482985802627894370927437299858900L
128521521598235022003555268997431274776304178789436209693311093712833683980786092956550737222507463172338914952598692624676053484386075078529684443054021335190130122101043977591730465825384382474841520249803438387816024469489142014186884004591463147145948902163739792774799674339374919602122843944614330978084452261500573138035421660889687311506854853091770935619470410988850682262355077575483212020324902943704136955002976568796004495032203799205519692801444186162764705594838343090761473195127966690901915672767992379240196918094602192554627216821040762081690198263693664178778437127565202068169813077469901645573L

3. newpythonproject -> key.pem

4. openssl rsautl -decrypt -inkey key.pem -in robert.almar_RSA_pseudo.enc -out descifrado.txt
