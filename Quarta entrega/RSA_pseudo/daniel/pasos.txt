1. openssl rsa -in daniel.garcia.romero_pubkeyRSA_pseudo.pem -pubin -text -modulus > salida.txt

2. Sagemath
   --------

Modulus = "7B2FCBEEF9C0CAF9BE5DDEE0FBE6E937772C5CF651BFBD118B3D34ADF565D16295CDD38DC5528A601262D5996B3541F6561E4F636967F344A4006ED20AA4695434F3296EF2FAD121BF5216AF9EC9386CD1C563B6FA5583DC863D976FDCE6825D157AF80A5BA93A0F826786C1A2142CB8DD55522A18FB5937CB5D00A0B6AFBD0650A5F6AA774BDDC424EF6B6B01044B19F6AC13EA92FC378C0742B8E2318E610A52C6655E1D4B2A456F801B029070021F139CD0585D01425197859B6C427B81CE2A14719EC46B3FF9730A5ABF9C5FC3E85C820FEA11A2940A97F91277783CB0B9E7DA8DA4FDDE7DCC403884EDAF353045C99C71F854C30C4361D9BC0B9B56C1"
n = long(Modulus,16)
n

60745628516552459895769359692078969755035811978034048553870590348909750706647978066494614014145194822204539973693634478653108344989197318131420407567364033894123616208161682684238193619655897012253700593658212345679345629933203028186777499356291591392937298349957771178714135380913796962151954806729042120300417386233126279131651393978744162448236718427306479837324407123943293018860593159210002752217870542688408446621939765280933064771065509354353822419532082610119982486958991900449665516364163676595152190472141028937113054284158546581085784215087497337129427587081649761199538062493106104644266688785428469441L

factor(n)

13405068951902371949^16 * 294036520133602654830808856018532835567^8

p = long(13405068951902371949^16)
q = long(294036520133602654830808856018532835567^8)
p*q

60745628516552459895769359692078969755035811978034048553870590348909750706647978066494614014145194822204539973693634478653108344989197318131420407567364033894123616208161682684238193619655897012253700593658212345679345629933203028186777499356291591392937298349957771178714135380913796962151954806729042120300417386233126279131651393978744162448236718427306479837324407123943293018860593159210002752217870542688408446621939765280933064771065509354353822419532082610119982486958991900449665516364163676595152190472141028937113054284158546581085784215087497337129427587081649761199538062493106104644266688785428469441L

# n = p^r * q^s => fiDeN = (p^(r-1) * (p-1)) * (q^(s-1) * (q-1))

e = long(65537)
fiDeN = long( ( 13405068951902371949^15 * (13405068951902371949 - 1) ) * ( 294036520133602654830808856018532835567^7 * (294036520133602654830808856018532835567 - 1) ) )
fiDeN
d = long(inverse_mod(e,fiDeN))
d

60745628516552459891237818024183872345349572793119159013888054056767031969726895728964123952121835492441126858834850936512110447923773564025932632705536950993671526999124834059463083451428464310702975710496158481662862026265360216583011795085476136346050216715677481918364005084265659029243560019227645867024161960792297199440022668474647495371124648301341749590621868663262527473610109345513995217468756314192815815403230947090666439894265527905531078834568341904538881340779346691691095642865908216434153019751391734383430177160819434027371845167180412818382328841001466758299575965495524328150219939830027740536L
54668006925954256136002662725885603413777222078187405566918190156218922830988484521633642533166697550149955935335451855218949207600960752037009730029945975092035745646098886321118340204239602439007911674398636300844951741903519318462334798268785304815448399864056302295575156321924845042415508337794628274670568876322225442467194668456516307993788726319684092815583224953220682521225021731211612339995838189283798110876032794595533921677278191492870028070598910623460079367062359703311729572855505540462431071073394944747771668659614114453429229716958370813863767872228916633420952903625830063541205304655004594913L

3. newpythonproject -> key.pem

4. openssl rsautl -decrypt -inkey key.pem -in daniel.garcia.romero_RSA_pseudo.enc -out descifrado.txt
